.LOGON localhost/dbc,dbc;

-- Les tables WRK sont recréées à chaque exécution

--Table CHAMBRE
-- Verification si table Chambre existe
SELECT * FROM dbc.tables where tablename='WRK_CHAMBRE';

-- Suppression de la table Chambre si elle existe
.IF ACTIVITYCOUNT=0 THEN .GOTO LABEL_SKIP_DELETE_CHAMBRE;
DROP TABLE WRK.WRK_CHAMBRE;

-- Creation de la table Chambre
.LABEL LABEL_SKIP_DELETE_CHAMBRE

CREATE SET TABLE WRK.WRK_CHAMBRE (
    NO_CHAMBRE INTEGER NOT NULL PRIMARY KEY,
    NOM_CHAMBRE VARCHAR(20) NOT NULL,
    NO_ETAGE BYTEINT,
    NOM_BATIMENT VARCHAR(20),
    TYPE_CHAMBRE VARCHAR(20),
    PRIX_JOUR SMALLINT NOT NULL,
    DT_CREATION DATE NOT NULL,
    EXEC_ID INTEGER
);


--Table TRAITEMENT
-- Verification si table Traitement existe
SELECT * FROM dbc.tables where tablename='WRK_TRAITEMENT';

-- Suppression de la table Chambre si elle existe
.IF ACTIVITYCOUNT=0 THEN .GOTO LABEL_SKIP_DELETE_TRAITEMENT;
DROP TABLE WRK.WRK_TRAITEMENT;

-- Creation de la table Traitement
.LABEL LABEL_SKIP_DELETE_TRAITEMENT

CREATE SET TABLE WRK.WRK_TRAITEMENT (
    ID_TRAITEMENT BIGINT NOT NULL PRIMARY KEY,
    MEDC_ID VARCHAR(100),
    CD_MEDICAMENT INTEGER NOT NULL,
    CATG_MEDICAMENT VARCHAR(100) NOT NULL,
    MARQUE_FABRI VARCHAR(100) NOT NULL,
    QTE_MEDICAMENT SMALLINT,
    DSC_POSOLOGIE VARCHAR(100) NOT NULL,
    ID_CONSULT BIGINT NOT NULL,
    TS_CREATION_TRAITEMENT TIMESTAMP(0) NOT NULL,
    EXEC_ID INTEGER
);

--Table INDIVIDU
-- Verification si table Individu existe
SELECT * FROM dbc.tables where tablename='WRK_INDIVIDU';

-- Suppression de la table Individu si elle existe
.IF ACTIVITYCOUNT=0 THEN .GOTO LABEL_SKIP_DELETE_INDIVIDU;
DROP TABLE WRK.WRK_INDIVIDU;

-- Creation de la table Individu
.LABEL LABEL_SKIP_DELETE_INDIVIDU

CREATE SET TABLE WRK.WRK_INDIVIDU (
    PART_ID INTEGER, 
    INDV_NAME VARCHAR(100) NOT NULL,
    INDV_FIRS_NAME  VARCHAR(100) NOT NULL,
    INDV_STTS_CD VARCHAR(10),
    TS_CREATION TIMESTAMP(0) NOT NULL,
    TS_MAJ TIMESTAMP(0) NOT NULL, 
    DT_NAISS DATE,
    VILLE_NAISS VARCHAR(100),
    PAYS_NAISS VARCHAR(100),
    NUM_SECU VARCHAR(15),
    EXEC_ID INTEGER
);

--Table Consultation
-- Verification si table Consultation existe
SELECT * FROM dbc.tables where tablename='WRK_CONSULTATION';

-- Suppression de la table Individu si elle existe
.IF ACTIVITYCOUNT=0 THEN .GOTO LABEL_SKIP_DELETE_CONSULTATION;
DROP TABLE WRK.WRK_CONSULTATION;

-- Creation de la table Individu
.LABEL LABEL_SKIP_DELETE_CONSULTATION

CREATE SET TABLE WRK.WRK_CONSULTATION (
    ID_CONSULT BIGINT NOT NULL PRIMARY KEY,
    ID_PERSONNEL INTEGER NOT NULL,
    ID_PATIENT INTEGER NOT NULL,
    TS_DEBUT_CONSULT TIMESTAMP(0) NOT NULL,
    TS_FIN_CONSULT TIMESTAMP(0) NOT NULL,
    POIDS_PATIENT INTEGER NOT NULL,
    TEMP_PATIENT INTEGER,
    UNIT_TEMP VARCHAR(15),
    TENSION_PATIENT INTEGER, 
    DSC_PATHO VARCHAR(250),
    INDIC_DIABETE VARCHAR(10),
    ID_TRAITEMENT BIGINT,
    INDIC_HOSPI VARCHAR(10),
    EXEC_ID INTEGER
);

--Table Hospitalisation
-- Verification si table Hospitalisation existe
SELECT * FROM dbc.tables where tablename='WRK_HOSPITALISATION';

-- Suppression de la table Individu si elle existe
.IF ACTIVITYCOUNT=0 THEN .GOTO LABEL_SKIP_DELETE_HOSPITALISATION;
DROP TABLE WRK.WRK_HOSPITALISATION;

-- Creation de la table Individu
.LABEL LABEL_SKIP_DELETE_HOSPITALISATION

CREATE SET TABLE WRK.WRK_HOSPITALISATION (
    ID_HOSPI BIGINT NOT NULL PRIMARY KEY,
    ID_CONSULT BIGINT NOT NULL,
    NO_CHAMBRE SMALLINT NOT NULL,
    TS_DEBUT_HOSPI TIMESTAMP(0) NOT NULL,
    TS_FIN_HOSPI TIMESTAMP(0),
    COUT_HOSPI INTEGER,
    ID_PERSONNEL_RESP INTEGER NOT NULL,
    EXEC_ID INTEGER
);



.IF ERRORCODE <> 0 THEN .QUIT 100;

.LOGOFF;
.EXIT;