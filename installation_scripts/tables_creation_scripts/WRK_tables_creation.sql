.LOGON localhost/dbc,dbc;

-- WRK tables are recreated every execution

-- Table WRK_CHAMBRE
-- Check if WRK_CHAMBRE table exists
SELECT * FROM dbc.tables WHERE tablename='WRK_CHAMBRE';

-- Drop WRK_CHAMBRE table if it exists
.IF ACTIVITYCOUNT=0 THEN .GOTO LABEL_SKIP_DELETE_CHAMBRE;
DROP TABLE WRK.WRK_CHAMBRE;

.LABEL LABEL_SKIP_DELETE_CHAMBRE

-- Create WRK_CHAMBRE table
CREATE TABLE WRK.WRK_CHAMBRE (
    NO_CHAMBRE INTEGER UNIQUE NOT NULL,
    NOM_CHAMBRE VARCHAR(20) NOT NULL,
    NO_ETAGE BYTEINT,
    NOM_BATIMENT VARCHAR(20),
    TYPE_CHAMBRE VARCHAR(20),
    PRIX_JOUR SMALLINT NOT NULL,
    DT_CREATION DATE NOT NULL,
    EXEC_ID INTEGER NOT NULL
);

-- Table WRK_TRAITEMENT
-- Check if WRK_TRAITEMENT table exists
SELECT * FROM dbc.tables WHERE tablename='WRK_TRAITEMENT';

-- Drop WRK_TRAITEMENT table if it exists
.IF ACTIVITYCOUNT=0 THEN .GOTO LABEL_SKIP_DELETE_TRAITEMENT;
DROP TABLE WRK.WRK_TRAITEMENT;

.LABEL LABEL_SKIP_DELETE_TRAITEMENT

-- Create WRK_TRAITEMENT table
CREATE TABLE WRK.WRK_TRAITEMENT (
    ID_TRAITEMENT BIGINT UNIQUE NOT NULL,
    MEDC_ID INTEGER,
    CD_MEDICAMENT INTEGER NOT NULL,
    CATG_MEDICAMENT VARCHAR(100) NOT NULL,
    MARQUE_FABRI VARCHAR(100) NOT NULL,
    QTE_MEDICAMENT SMALLINT,
    DSC_POSOLOGIE VARCHAR(100) NOT NULL,
    ID_CONSULT BIGINT NOT NULL,
    TS_CREATION_TRAITEMENT TIMESTAMP(0) NOT NULL,
    EXEC_ID INTEGER NOT NULL
);

-- Table WRK_INDIVIDU
-- Check if WRK_INDIVIDU table exists
SELECT * FROM dbc.tables WHERE tablename='WRK_INDIVIDU';

-- Drop WRK_INDIVIDU table if it exists
.IF ACTIVITYCOUNT=0 THEN .GOTO LABEL_SKIP_DELETE_INDIVIDU;
DROP TABLE WRK.WRK_INDIVIDU;

.LABEL LABEL_SKIP_DELETE_INDIVIDU

-- Create WRK_INDIVIDU table
CREATE TABLE WRK.WRK_INDIVIDU (
    PART_ID INTEGER,
    INDIVIDU_ID INTEGER UNIQUE NOT NULL,
    FONCTION_INDIVIDU VARCHAR(50),
    INDV_NAME VARCHAR(100) NOT NULL,
    INDV_FIRS_NAME VARCHAR(100) NOT NULL,
    INDV_STTS_CD VARCHAR(10),
    TS_CREATION TIMESTAMP(0) NOT NULL,
    TS_MAJ TIMESTAMP(0) NOT NULL,
    DT_NAISS DATE,
    VILLE_NAISS VARCHAR(100),
    PAYS_NAISS VARCHAR(100),
    NUM_SECU VARCHAR(15),
    EXEC_ID INTEGER NOT NULL
);

-- Table WRK_CONSULTATION
-- Check if WRK_CONSULTATION table exists
SELECT * FROM dbc.tables WHERE tablename='WRK_CONSULTATION';

-- Drop WRK_CONSULTATION table if it exists
.IF ACTIVITYCOUNT=0 THEN .GOTO LABEL_SKIP_DELETE_CONSULTATION;
DROP TABLE WRK.WRK_CONSULTATION;

.LABEL LABEL_SKIP_DELETE_CONSULTATION

-- Create WRK_CONSULTATION table
CREATE TABLE WRK.WRK_CONSULTATION (
    ID_CONSULT BIGINT UNIQUE NOT NULL,
    ID_PERSONNEL INTEGER NOT NULL,
    ID_PATIENT INTEGER NOT NULL,
    TS_DEBUT_CONSULT TIMESTAMP(0) NOT NULL,
    TS_FIN_CONSULT TIMESTAMP(0) NOT NULL,
    POIDS_PATIENT INTEGER NOT NULL,
    TEMP_PATIENT INTEGER,
    UNIT_TEMP VARCHAR(15),
    TENSION_PATIENT INTEGER,
    DSC_PATHO VARCHAR(250),
    INDIC_DIABETE VARCHAR(10),
    ID_TRAITEMENT BIGINT,
    INDIC_HOSPI VARCHAR(10),
    EXEC_ID INTEGER NOT NULL
);

-- Table WRK_HOSPITALISATION
-- Check if WRK_HOSPITALISATION table exists
SELECT * FROM dbc.tables WHERE tablename='WRK_HOSPITALISATION';

-- Drop WRK_HOSPITALISATION table if it exists
.IF ACTIVITYCOUNT=0 THEN .GOTO LABEL_SKIP_DELETE_HOSPITALISATION;
DROP TABLE WRK.WRK_HOSPITALISATION;

.LABEL LABEL_SKIP_DELETE_HOSPITALISATION

-- Create WRK_HOSPITALISATION table
CREATE TABLE WRK.WRK_HOSPITALISATION (
    ID_HOSPI BIGINT UNIQUE NOT NULL,
    ID_CONSULT BIGINT NOT NULL,
    NO_CHAMBRE SMALLINT NOT NULL,
    TS_DEBUT_HOSPI TIMESTAMP(0) NOT NULL,
    TS_FIN_HOSPI TIMESTAMP(0),
    COUT_HOSPI INTEGER,
    ID_PERSONNEL_RESP INTEGER NOT NULL,
    EXEC_ID INTEGER NOT NULL
);

-- Table WRK_MEDICAMENT
-- Check if WRK_MEDICAMENT table exists
SELECT * FROM dbc.tables WHERE tablename='WRK_MEDICAMENT';

-- Drop WRK_MEDICAMENT table if it exists
.IF ACTIVITYCOUNT=0 THEN .GOTO LABEL_SKIP_DELETE_MEDICAMENT;
DROP TABLE WRK.WRK_MEDICAMENT;

.LABEL LABEL_SKIP_DELETE_MEDICAMENT

-- Create WRK_MEDICAMENT table
CREATE TABLE WRK.WRK_MEDICAMENT (
    MEDC_ID INTEGER,
    CD_MEDICAMENT VARCHAR(10) UNIQUE NOT NULL,
    NOM_MEDICAMENT VARCHAR(250),
    CONDIT_MEDICAMENT VARCHAR(100),
    CATG_MEDICAMENT VARCHAR(100) NOT NULL,
    MARQUE_FABRI VARCHAR(100) NOT NULL,
    EXEC_ID INTEGER NOT NULL
);

-- Table WRK_ADRESSE
-- Check if WRK_ADRESSE table exists
SELECT * FROM dbc.tables WHERE tablename='WRK_ADRESSE';

-- Drop WRK_ADRESSE table if it exists
.IF ACTIVITYCOUNT=0 THEN .GOTO LABEL_SKIP_DELETE_ADRESSE;
DROP TABLE WRK.WRK_ADRESSE;

.LABEL LABEL_SKIP_DELETE_ADRESSE

-- Create WRK_ADRESSE table
CREATE TABLE WRK.WRK_ADRESSE (
    PART_ID INTEGER,
    INDIVIDU_ID INTEGER UNIQUE NOT NULL,
    FONCTION_INDIVIDU VARCHAR(50),
    STRT_NUM VARCHAR(10) NOT NULL,
    STRT_DSC VARCHAR(250) NOT NULL,
    COMP_STRT VARCHAR(250),
    POST_CD VARCHAR(10) NOT NULL,
    CITY_NAME VARCHAR(100),
    CNTR_NAME VARCHAR(100),
    TS_CREATION_PATIENT TIMESTAMP(0) NOT NULL,
    TS_MAJ_PATIENT TIMESTAMP(0) NOT NULL,
    EXEC_ID INTEGER NOT NULL
);

-- Table WRK_TELP
-- Check if WRK_TELP table exists
SELECT * FROM dbc.tables WHERE tablename='WRK_TELP';

-- Drop WRK_TELP table if it exists
.IF ACTIVITYCOUNT=0 THEN .GOTO LABEL_SKIP_DELETE_TELP;
DROP TABLE WRK.WRK_TELP;

.LABEL LABEL_SKIP_DELETE_TELP

-- Create WRK_TELP table
CREATE TABLE WRK.WRK_TELP (
    PART_ID INTEGER,
    INDIVIDU_ID INTEGER UNIQUE NOT NULL,
    FONCTION_INDIVIDU VARCHAR(50),
    IND_PAYS_NUM_TELP VARCHAR(5),
    NUM_TELEPHONE VARCHAR(20) NOT NULL,
    TS_CREATION_PATIENT TIMESTAMP(0) NOT NULL,
    TS_MAJ_PATIENT TIMESTAMP(0) NOT NULL,
    EXEC_ID INTEGER NOT NULL
);

-- Table WRK_RPART
-- Check if WRK_RPART table exists
SELECT * FROM dbc.tables WHERE tablename='WRK_RPART';

-- Drop WRK_RPART table if it exists
.IF ACTIVITYCOUNT=0 THEN .GOTO LABEL_SKIP_DELETE_RPART;
DROP TABLE WRK.WRK_RPART;

.LABEL LABEL_SKIP_DELETE_RPART

-- Create WRK_RPART table
CREATE TABLE WRK.WRK_RPART (
    PART_ID INTEGER,
    INDIVIDU_ID INTEGER UNIQUE NOT NULL,
    FONCTION_INDIVIDU VARCHAR(50),
    EXEC_ID INTEGER NOT NULL
);

-- Table WRK_STAFF
-- Check if WRK_STAFF table exists
SELECT * FROM dbc.tables WHERE tablename='WRK_STAFF';

-- Drop WRK_STAFF table if it exists
.IF ACTIVITYCOUNT=0 THEN .GOTO LABEL_SKIP_DELETE_STAFF;
DROP TABLE WRK.WRK_STAFF;

.LABEL LABEL_SKIP_DELETE_STAFF

-- Create WRK_STAFF table
CREATE TABLE WRK.WRK_STAFF (
    PART_ID INTEGER,
    INDIVIDU_ID INTEGER UNIQUE NOT NULL,
    FONCTION_INDIVIDU VARCHAR(50),
    WORK_STRT_DTTM TIMESTAMP(0) NOT NULL,
    WORK_END_DTTM TIMESTAMP(0),
    WORK_END_RESN VARCHAR(100),
    EXEC_ID INTEGER NOT NULL
);

.IF ERRORCODE <> 0 THEN .QUIT 100;

.LOGOFF;
.EXIT;
