.LOGON localhost/dbc,dbc;

-- Les tables STG sont recréées à chaque exécution

--Table CHAMBRE
-- Verification si table Chambre existe
SELECT * FROM dbc.tables where tablename='CHAMBRE';

-- Suppression de la table Chambre si elle existe
.IF ACTIVITYCOUNT=0 THEN .GOTO LABEL_SKIP_DELETE_CHAMBRE;
DROP TABLE STG.CHAMBRE;

-- Creation de la table Chambre
.LABEL LABEL_SKIP_DELETE_CHAMBRE

CREATE SET TABLE STG.CHAMBRE (
    NO_CHAMBRE INTEGER NOT NULL PRIMARY KEY,
    NOM_CHAMBRE VARCHAR(20) NOT NULL,
    NO_ETAGE BYTEINT,
    NOM_BATIMENT VARCHAR(20),
    TYPE_CHAMBRE VARCHAR(20),
    PRIX_JOUR SMALLINT NOT NULL,
    DT_CREATION DATE NOT NULL
);

--Table TRAITEMENT
-- Verification si table Traitement existe
SELECT * FROM dbc.tables where tablename='TRAITEMENT';

-- Suppression de la table Traitement si elle existe
.IF ACTIVITYCOUNT=0 THEN .GOTO LABEL_SKIP_DELETE_TRAITEMENT;
DROP TABLE STG.TRAITEMENT;

-- Creation de la table Traitement
.LABEL LABEL_SKIP_DELETE_TRAITEMENT

CREATE SET TABLE STG.TRAITEMENT (
    ID_TRAINTEMENT INTEGER NOT NULL PRIMARY KEY,
    CD_MEDICAMENT INTEGER NOT NULL,
    CATG_MEDICAMENT VARCHAR(100) NOT NULL,
    MARQUE_FABRI VARCHAR(100) NOT NULL,
    QTE_MEDICAMENT SMALLINT,
    DSC_POSOLOGIE VARCHAR(100) NOT NULL,
    ID_CONSULT INTEGER NOT NULL,
    TS_CREATION_TRAITEMENT TIMESTAMP(0) NOT NULL
);

--Table PERSONNEL
-- Verification si table PERSONNEL existe
SELECT * FROM dbc.tables where tablename='PERSONNEL';

-- Suppression de la table PERSONNEL si elle existe
.IF ACTIVITYCOUNT=0 THEN .GOTO LABEL_SKIP_DELETE_PERSONNEL;
DROP TABLE STG.PERSONNEL;

-- Creation de la table PERSONNEL
.LABEL LABEL_SKIP_DELETE_PERSONNEL

CREATE SET TABLE STG.PERSONNEL (
    ID_PERSONNEL INTEGER NOT NULL PRIMARY KEY,
    NOM_PERSONNEL VARCHAR(100) NOT NULL,
    PRENOM_PERSONNEL VARCHAR(100) NOT NULL,
    FONCTION_PERSONNEL VARCHAR(50) NOT NULL,
    TS_DEBUT_ACTIVITE TIMESTAMP(0) NOT NULL,
    TS_FIN_ACTIVITE TIMESTAMP(0),
    RAISON_FIN_ACTIVITE  VARCHAR(100),
    TS_CREATION_PERSONNEL TIMESTAMP(0) NOT NULL,
    TS_MAJ_PERSONNEL TIMESTAMP(0) NOT NULL,
    CD_STATUT_PERSONNEL  VARCHAR(10) NOT NULL
);

--Table PATIENT
-- Verification si table PATIENT existe
SELECT * FROM dbc.tables where tablename='PATIENT';

-- Suppression de la table PATIENT si elle existe
.IF ACTIVITYCOUNT=0 THEN .GOTO LABEL_SKIP_DELETE_PATIENT;
DROP TABLE STG.PATIENT;

-- Creation de la table PATIENT
.LABEL LABEL_SKIP_DELETE_PATIENT

CREATE SET TABLE STG.PATIENT (
    ID_PATIENT INTEGER NOT NULL PRIMARY KEY,
    NOM_PATIENT VARCHAR(100) NOT NULL,
    PRENOM_PRENOM VARCHAR(100) NOT NULL,
    DT_NAISS DATE,
    VILLE_NAISS VARCHAR(100),
    PAYS_NAISS VARCHAR(100),
    NUM_SECU VARCHAR(15),
    IND_PAYS_NUM_TELP VARCHAR(5),
    NUM_TELEPHONE VARCHAR(20),
    NUM_VOIE VARCHAR(10),
    DSC_VOIE VARCHAR(250),
    CMPL_VOIE VARCHAR(250),
    CD_POSTAL VARCHAR(10),
    VILLE VARCHAR(100),
    PAYS VARCHAR(100),
    TS_CREATION_PATIENT TIMESTAMP(0) NOT NULL,
    TS_MAJ_PERSONNEL TIMESTAMP(0) NOT NULL
);

--Table CONSULTATION
-- Verification si table CONSULTATION existe
SELECT * FROM dbc.tables where tablename='CONSULTATION';

-- Suppression de la table CONSULTATION si elle existe
.IF ACTIVITYCOUNT=0 THEN .GOTO LABEL_SKIP_DELETE_CONSULTATION;
DROP TABLE STG.CONSULTATION;

-- Creation de la table CONSULTATION
.LABEL LABEL_SKIP_DELETE_CONSULTATION

CREATE SET TABLE STG.CONSULTATION (
    ID_CONSULT INTEGER NOT NULL PRIMARY KEY,
    ID_PERSONNEL INTEGER NOT NULL,
    ID_PATIENT INTEGER NOT NULL,
    TS_DEBUT_CONSULT TIMESTAMP(0) NOT NULL,
    TS_FIN_CONSULT TIMESTAMP(0) NOT NULL,
    POIDS_PATIENT INTEGER NOT NULL,
    TEMP_PATIENT INTEGER,
    UNIT_TEMP VARCHAR(15),
    TENSION_PATIENT INTEGER, 
    DSC_PATHO VARCHAR(250),
    INDIC_DIABETE VARCHAR(10),
    ID_TRAITEMENT INTEGER,
    INDIC_HOSPI VARCHAR(10)
);

--Table HOSPITALISATION
-- Verification si table HOSPITALISATION existe
SELECT * FROM dbc.tables where tablename='HOSPITALISATION';

-- Suppression de la table HOSPITALISATION si elle existe
.IF ACTIVITYCOUNT=0 THEN .GOTO LABEL_SKIP_DELETE_HOSPITALISATION;
DROP TABLE STG.HOSPITALISATION;

-- Creation de la table HOSPITALISATION
.LABEL LABEL_SKIP_DELETE_HOSPITALISATION

CREATE SET TABLE STG.HOSPITALISATION (
    ID_HOSPI INTEGER NOT NULL PRIMARY KEY,
    ID_CONSULT INTEGER NOT NULL,
    NO_CHAMBRE SMALLINT NOT NULL,
    TS_DEBUT_HOSPI TIMESTAMP(0) NOT NULL,
    TS_FIN_HOSPI TIMESTAMP(0),
    COUT_HOSPI INTEGER,
    ID_PERSONNEL_RESP INTEGER NOT NULL
);

--Table MEDICAMENT
-- Verification si table MEDICAMENT existe
SELECT * FROM dbc.tables where tablename='MEDICAMENT';

-- Suppression de la table MEDICAMENT si elle existe
.IF ACTIVITYCOUNT=0 THEN .GOTO LABEL_SKIP_DELETE_MEDICAMENT;
DROP TABLE STG.MEDICAMENT;

-- Creation de la table MEDICAMENT
.LABEL LABEL_SKIP_DELETE_MEDICAMENT

CREATE SET TABLE STG.MEDICAMENT (
    CD_MEDICAMENT VARCHAR(10) NOT NULL PRIMARY KEY,
    NOM_MEDICAMENT VARCHAR(250),
    CONDIT_MEDICAMENT VARCHAR(100),
    CATG_MEDICAMENT VARCHAR(100) NOT NULL,
    MARQUE_FABRI VARCHAR(100) NOT NULL
);


.IF ERRORCODE <> 0 THEN .QUIT 100;

.LOGOFF;
.EXIT;
